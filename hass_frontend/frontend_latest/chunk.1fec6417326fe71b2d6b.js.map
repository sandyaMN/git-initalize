{"version":3,"sources":["webpack:///./src/common/config/is_component_loaded.ts","webpack:///./src/data/cloud.ts","webpack:///./src/common/dom/media_query.ts","webpack:///./src/panels/config/ha-panel-config.ts"],"names":["__webpack_require__","d","__webpack_exports__","isComponentLoaded","hass","component","config","components","indexOf","fetchCloudStatus","createCloudhook","deleteCloudhook","connectCloudRemote","disconnectCloudRemote","fetchCloudSubscriptionInfo","convertThingTalk","updateCloudPref","updateCloudGoogleEntityConfig","cloudSyncGoogleAssistant","updateCloudAlexaEntityConfig","callWS","type","webhookId","webhook_id","query","prefs","Object","assign","entityId","values","entity_id","callApi","listenMediaQuery","mediaQuery","matchesChanged","mql","matchMedia","listener","e","matches","addListener","removeListener","customElement","HaPanelConfig","_HassRouterPage","[object Object]","args","super","_initialize","this","property","defaultPage","cacheAll","preloadAll","routes","area_registry","tag","load","then","bind","automation","Promise","all","cloud","core","devices","server_control","customize","dashboard","entity_registry","integrations","person","script","scene","users","zha","zwave","_get","_getPrototypeOf","prototype","call","_listeners","push","_wide","_wideSidebar","getOptimisticFrontendUserDataCollection","connection","subscribe","coreUserData","_coreUserData","length","pop","changedProps","_updateCloudStatus","addEventListener","el","showAdvanced","isWide","dockedSidebar","setProperties","route","routeTail","narrow","cloudStatus","_cloudStatus","async","setTimeout","HassRouterPage"],"mappings":"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","file":"chunk.1fec6417326fe71b2d6b.js","sourcesContent":["import { HomeAssistant } from \"../../types\";\n\n/** Return if a component is loaded. */\nexport const isComponentLoaded = (\n  hass: HomeAssistant,\n  component: string\n): boolean => hass && hass.config.components.indexOf(component) !== -1;\n","import { HomeAssistant } from \"../types\";\nimport { EntityFilter } from \"../common/entity/entity_filter\";\nimport { AutomationConfig } from \"./automation\";\nimport { PlaceholderContainer } from \"../panels/config/automation/thingtalk/dialog-thingtalk\";\n\ninterface CloudStatusBase {\n  logged_in: boolean;\n  cloud: \"disconnected\" | \"connecting\" | \"connected\";\n}\n\nexport interface GoogleEntityConfig {\n  should_expose?: boolean;\n  override_name?: string;\n  aliases?: string[];\n  disable_2fa?: boolean;\n}\n\nexport interface AlexaEntityConfig {\n  should_expose?: boolean;\n}\n\nexport interface CertificateInformation {\n  common_name: string;\n  expire_date: string;\n  fingerprint: string;\n}\n\nexport interface CloudPreferences {\n  google_enabled: boolean;\n  alexa_enabled: boolean;\n  remote_enabled: boolean;\n  google_secure_devices_pin: string | undefined;\n  cloudhooks: { [webhookId: string]: CloudWebhook };\n  google_entity_configs: {\n    [entityId: string]: GoogleEntityConfig;\n  };\n  alexa_entity_configs: {\n    [entityId: string]: AlexaEntityConfig;\n  };\n  alexa_report_state: boolean;\n  google_report_state: boolean;\n}\n\nexport type CloudStatusLoggedIn = CloudStatusBase & {\n  email: string;\n  google_entities: EntityFilter;\n  google_domains: string[];\n  alexa_entities: EntityFilter;\n  prefs: CloudPreferences;\n  remote_domain: string | undefined;\n  remote_connected: boolean;\n  remote_certificate: undefined | CertificateInformation;\n};\n\nexport type CloudStatus = CloudStatusBase | CloudStatusLoggedIn;\n\nexport interface SubscriptionInfo {\n  human_description: string;\n}\n\nexport interface CloudWebhook {\n  webhook_id: string;\n  cloudhook_id: string;\n  cloudhook_url: string;\n  managed?: boolean;\n}\n\nexport interface ThingTalkConversion {\n  config: Partial<AutomationConfig>;\n  placeholders: PlaceholderContainer;\n}\n\nexport const fetchCloudStatus = (hass: HomeAssistant) =>\n  hass.callWS<CloudStatus>({ type: \"cloud/status\" });\n\nexport const createCloudhook = (hass: HomeAssistant, webhookId: string) =>\n  hass.callWS<CloudWebhook>({\n    type: \"cloud/cloudhook/create\",\n    webhook_id: webhookId,\n  });\n\nexport const deleteCloudhook = (hass: HomeAssistant, webhookId: string) =>\n  hass.callWS({\n    type: \"cloud/cloudhook/delete\",\n    webhook_id: webhookId,\n  });\n\nexport const connectCloudRemote = (hass: HomeAssistant) =>\n  hass.callWS({\n    type: \"cloud/remote/connect\",\n  });\n\nexport const disconnectCloudRemote = (hass: HomeAssistant) =>\n  hass.callWS({\n    type: \"cloud/remote/disconnect\",\n  });\n\nexport const fetchCloudSubscriptionInfo = (hass: HomeAssistant) =>\n  hass.callWS<SubscriptionInfo>({ type: \"cloud/subscription\" });\n\nexport const convertThingTalk = (hass: HomeAssistant, query: string) =>\n  hass.callWS<ThingTalkConversion>({ type: \"cloud/thingtalk/convert\", query });\n\nexport const updateCloudPref = (\n  hass: HomeAssistant,\n  prefs: {\n    google_enabled?: CloudPreferences[\"google_enabled\"];\n    alexa_enabled?: CloudPreferences[\"alexa_enabled\"];\n    alexa_report_state?: CloudPreferences[\"alexa_report_state\"];\n    google_report_state?: CloudPreferences[\"google_report_state\"];\n    google_secure_devices_pin?: CloudPreferences[\"google_secure_devices_pin\"];\n  }\n) =>\n  hass.callWS({\n    type: \"cloud/update_prefs\",\n    ...prefs,\n  });\n\nexport const updateCloudGoogleEntityConfig = (\n  hass: HomeAssistant,\n  entityId: string,\n  values: GoogleEntityConfig\n) =>\n  hass.callWS<GoogleEntityConfig>({\n    type: \"cloud/google_assistant/entities/update\",\n    entity_id: entityId,\n    ...values,\n  });\n\nexport const cloudSyncGoogleAssistant = (hass: HomeAssistant) =>\n  hass.callApi(\"POST\", \"cloud/google_actions/sync\");\n\nexport const updateCloudAlexaEntityConfig = (\n  hass: HomeAssistant,\n  entityId: string,\n  values: AlexaEntityConfig\n) =>\n  hass.callWS<AlexaEntityConfig>({\n    type: \"cloud/alexa/entities/update\",\n    entity_id: entityId,\n    ...values,\n  });\n","/**\n * Attach a media query. Listener is called right away and when it matches.\n * @param mediaQuery media query to match.\n * @param listener listener to call when media query changes between match/unmatch\n * @returns function to remove the listener.\n */\nexport const listenMediaQuery = (\n  mediaQuery: string,\n  matchesChanged: (matches: boolean) => void\n) => {\n  const mql = matchMedia(mediaQuery);\n  const listener = (e) => matchesChanged(e.matches);\n  mql.addListener(listener);\n  matchesChanged(mql.matches);\n  return () => mql.removeListener(listener);\n};\n","import { property, PropertyValues, customElement } from \"lit-element\";\nimport \"../../layouts/hass-loading-screen\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { HomeAssistant } from \"../../types\";\nimport { CloudStatus, fetchCloudStatus } from \"../../data/cloud\";\nimport { listenMediaQuery } from \"../../common/dom/media_query\";\nimport { HassRouterPage, RouterOptions } from \"../../layouts/hass-router-page\";\nimport {\n  CoreFrontendUserData,\n  getOptimisticFrontendUserDataCollection,\n} from \"../../data/frontend\";\nimport { PolymerElement } from \"@polymer/polymer\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"ha-refresh-cloud-status\": undefined;\n  }\n}\n\n@customElement(\"ha-panel-config\")\nclass HaPanelConfig extends HassRouterPage {\n  @property() public hass!: HomeAssistant;\n  @property() public narrow!: boolean;\n\n  protected routerOptions: RouterOptions = {\n    defaultPage: \"dashboard\",\n    cacheAll: true,\n    preloadAll: true,\n    routes: {\n      area_registry: {\n        tag: \"ha-config-area-registry\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"panel-config-area-registry\" */ \"./area_registry/ha-config-area-registry\"\n          ),\n      },\n      automation: {\n        tag: \"ha-config-automation\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"panel-config-automation\" */ \"./automation/ha-config-automation\"\n          ),\n      },\n      cloud: {\n        tag: \"ha-config-cloud\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"panel-config-cloud\" */ \"./cloud/ha-config-cloud\"\n          ),\n      },\n      core: {\n        tag: \"ha-config-core\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"panel-config-core\" */ \"./core/ha-config-core\"\n          ),\n      },\n      devices: {\n        tag: \"ha-config-devices\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"panel-config-devices\" */ \"./devices/ha-config-devices\"\n          ),\n      },\n      server_control: {\n        tag: \"ha-config-server-control\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"panel-config-server-control\" */ \"./server_control/ha-config-server-control\"\n          ),\n      },\n      customize: {\n        tag: \"ha-config-customize\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"panel-config-customize\" */ \"./customize/ha-config-customize\"\n          ),\n      },\n      dashboard: {\n        tag: \"ha-config-dashboard\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"panel-config-dashboard\" */ \"./dashboard/ha-config-dashboard\"\n          ),\n      },\n      entity_registry: {\n        tag: \"ha-config-entity-registry\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"panel-config-entity-registry\" */ \"./entity_registry/ha-config-entity-registry\"\n          ),\n      },\n      integrations: {\n        tag: \"ha-config-integrations\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"panel-config-integrations\" */ \"./integrations/ha-config-integrations\"\n          ),\n      },\n      person: {\n        tag: \"ha-config-person\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"panel-config-person\" */ \"./person/ha-config-person\"\n          ),\n      },\n      script: {\n        tag: \"ha-config-script\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"panel-config-script\" */ \"./script/ha-config-script\"\n          ),\n      },\n      scene: {\n        tag: \"ha-config-scene\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"panel-config-scene\" */ \"./scene/ha-config-scene\"\n          ),\n      },\n      users: {\n        tag: \"ha-config-users\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"panel-config-users\" */ \"./users/ha-config-users\"\n          ),\n      },\n      zha: {\n        tag: \"zha-config-panel\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"panel-config-zha\" */ \"./zha/zha-config-panel\"\n          ),\n      },\n      zwave: {\n        tag: \"ha-config-zwave\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"panel-config-zwave\" */ \"./zwave/ha-config-zwave\"\n          ),\n      },\n    },\n  };\n\n  @property() private _wideSidebar: boolean = false;\n  @property() private _wide: boolean = false;\n  @property() private _coreUserData?: CoreFrontendUserData;\n  @property() private _cloudStatus?: CloudStatus;\n\n  private _listeners: Array<() => void> = [];\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this._listeners.push(\n      listenMediaQuery(\"(min-width: 1040px)\", (matches) => {\n        this._wide = matches;\n      })\n    );\n    this._listeners.push(\n      listenMediaQuery(\"(min-width: 1296px)\", (matches) => {\n        this._wideSidebar = matches;\n      })\n    );\n    this._listeners.push(\n      getOptimisticFrontendUserDataCollection(\n        this.hass.connection,\n        \"core\"\n      ).subscribe((coreUserData) => {\n        this._coreUserData = coreUserData || {};\n      })\n    );\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    while (this._listeners.length) {\n      this._listeners.pop()!();\n    }\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    if (isComponentLoaded(this.hass, \"cloud\")) {\n      this._updateCloudStatus();\n    }\n    this.addEventListener(\"ha-refresh-cloud-status\", () =>\n      this._updateCloudStatus()\n    );\n  }\n\n  protected updatePageEl(el) {\n    const showAdvanced = !!(\n      this._coreUserData && this._coreUserData.showAdvanced\n    );\n    const isWide =\n      this.hass.dockedSidebar === \"docked\" ? this._wideSidebar : this._wide;\n\n    if (\"setProperties\" in el) {\n      // As long as we have Polymer panels\n      (el as PolymerElement).setProperties({\n        route: this.routeTail,\n        hass: this.hass,\n        showAdvanced,\n        isWide,\n        narrow: this.narrow,\n        cloudStatus: this._cloudStatus,\n      });\n    } else {\n      el.route = this.routeTail;\n      el.hass = this.hass;\n      el.showAdvanced = showAdvanced;\n      el.isWide = isWide;\n      el.narrow = this.narrow;\n      el.cloudStatus = this._cloudStatus;\n    }\n  }\n\n  private async _updateCloudStatus() {\n    this._cloudStatus = await fetchCloudStatus(this.hass);\n\n    if (this._cloudStatus.cloud === \"connecting\") {\n      setTimeout(() => this._updateCloudStatus(), 5000);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-panel-config\": HaPanelConfig;\n  }\n}\n"],"sourceRoot":""}