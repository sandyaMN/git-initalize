{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-markdown-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","kind","decorators","property","key","themes","concat","Object","keys","hass","sort","html","label","localize","_changed","map","theme","static","css","ev","target","fireEvent","LitElement","configElementStyle","cardConfigStruct","type","title","content","HuiMarkdownCardEditor","config","_config","_title","_valueChanged","_content","_theme","configValue","assign"],"mappings":"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","file":"chunk.9c45fed6b1c1a43cdf87.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-input/paper-textarea\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { MarkdownCardConfig } from \"../../cards/types\";\n\nimport \"../../components/hui-theme-select-editor\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  content: \"string\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-markdown-card-editor\")\nexport class HuiMarkdownCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: MarkdownCardConfig;\n\n  public setConfig(config: MarkdownCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _content(): string {\n    return this._config!.content || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"Backend-selected\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <paper-textarea\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.markdown.content\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .value=\"${this._content}\"\n          .configValue=\"${\"content\"}\"\n          @value-changed=\"${this._valueChanged}\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          spellcheck=\"false\"\n        ></paper-textarea>\n        <hui-theme-select-editor\n          .hass=\"${this.hass}\"\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @theme-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-markdown-card-editor\": HuiMarkdownCardEditor;\n  }\n}\n"],"sourceRoot":""}