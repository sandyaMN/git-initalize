{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-history-graph-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","entitiesConfigStruct","union","entity","name","cardConfigStruct","type","entities","title","hours_to_show","refresh_interval","HuiHistoryGraphCardEditor","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","kind","decorators","property","key","config","_config","_configEntities","processEditorEntities","hass","html","configElementStyle","localize","_title","_valueChanged","_hours_to_show","_refresh_interval","ev","target","detail","configValue","Number","Object","assign","fireEvent","LitElement"],"mappings":"oGAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAIO,MAAMA,EAASC,YAAY,CAChCC,MAAO,CACLC,YCNG,SAAoBC,GACzB,MAAqB,iBAAVA,EACF,iCAEJA,EAAMC,SAAS,MACX,qDDEPC,KEPG,SAAgBF,GACrB,MAAqB,iBAAVA,EACF,4BAEJA,EAAMC,SAAS,MACX,i5CCgBX,MAAME,EAAuBP,IAAOQ,MAAM,CACxC,CACEC,OAAQ,YACRC,KAAM,WAER,cAGIC,EAAmBX,YAAO,CAC9BY,KAAM,SACNC,SAAU,CAACN,GACXO,MAAO,UACPC,cAAe,UACfC,iBAAkB,YAIb,IAAMC,80LAAbC,CAAA,CADCC,YAAc,kCACf,SAAAC,EAAAC,GAAA,OAAAC,EADA,cAAAD,EAEgCE,eAAAC,GAAAC,SAAAD,GAAAJ,EAAAM,QADhC5B,EAAA,EAAA6B,KAAA,QAAAC,WAAA,CAEGC,eAFHC,IAAA,OAAA1B,WAAA,IAAAuB,KAAA,QAAAC,WAAA,CAIGC,eAJHC,IAAA,UAAA1B,WAAA,IAAAuB,KAAA,QAAAC,WAAA,CAMGC,eANHC,IAAA,kBAAA1B,WAAA,IAAAuB,KAAA,SAAAG,IAAA,YAAA1B,MAQE,SAAiB2B,GACfA,EAASpB,EAAiBoB,GAC1BL,KAAKM,QAAUD,EACfL,KAAKO,gBAAkBC,YAAsBH,EAAOlB,YAXxD,CAAAc,KAAA,MAAAG,IAAA,UAAA1B,MAcE,WACE,OAAOsB,KAAKM,QAASvB,QAAU,KAfnC,CAAAkB,KAAA,MAAAG,IAAA,SAAA1B,MAkBE,WACE,OAAOsB,KAAKM,QAASlB,OAAS,KAnBlC,CAAAa,KAAA,MAAAG,IAAA,iBAAA1B,MAsBE,WACE,OAAOsB,KAAKM,QAASjB,eAAiB,KAvB1C,CAAAY,KAAA,MAAAG,IAAA,oBAAA1B,MA0BE,WACE,OAAOsB,KAAKM,QAAShB,kBAAoB,IA3B7C,CAAAW,KAAA,SAAAG,IAAA,SAAA1B,MA8BE,WACE,OAAKsB,KAAKS,KAIHC;QACHC;;;oBAGYX,KAAKS,KAAKG,SAClB,mDACIZ,KAAKS,KAAKG,SACd;oBAEQZ,KAAKa;0BACC;4BACEb,KAAKc;;;;;sBAKXd,KAAKS,KAAKG,SAClB,2DACIZ,KAAKS,KAAKG,SACd;sBAEQZ,KAAKe;2BACA;8BACGf,KAAKc;;;;sBAIbd,KAAKS,KAAKG,SAClB,8DACIZ,KAAKS,KAAKG,SACd;sBAEQZ,KAAKgB;2BACA;8BACGhB,KAAKc;;;;mBAIhBd,KAAKS;uBACDT,KAAKO;+BACGP,KAAKc;;;MA3CvBJ,QAhCb,CAAAT,KAAA,SAAAG,IAAA,gBAAA1B,MAiFE,SAAsBuC,GACpB,IAAKjB,KAAKM,UAAYN,KAAKS,KACzB,OAEF,MAAMS,EAASD,EAAGC,OAElB,GAAKD,EAAGE,QAAUnB,SAASkB,EAAOE,iBAAmBF,EAAOxC,MAA5D,CAIA,GAAIuC,EAAGE,QAAUF,EAAGE,OAAOhC,SACzBa,KAAKM,QAAQnB,SAAW8B,EAAGE,OAAOhC,SAClCa,KAAKO,gBAAkBC,YAAsBR,KAAKM,QAAQnB,eACrD,GAAI+B,EAAOE,YAChB,GAAqB,KAAjBF,EAAOxC,aACFsB,KAAKM,QAAQY,EAAOE,iBACtB,CACL,IAAI1C,EAAawC,EAAOxC,MACJ,WAAhBwC,EAAOhC,OACTR,EAAQ2C,OAAO3C,IAEjBsB,KAAKM,QAALgB,OAAAC,OAAA,GACKvB,KAAKM,QADV,CAEET,CAACqB,EAAOE,aAAe1C,IAK7B8C,YAAUxB,KAAM,iBAAkB,CAAEK,OAAQL,KAAKM,gBA7GNmB","file":"chunk.c19abce0adfd168d6753.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-entity-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HistoryGraphCardConfig } from \"../../cards/hui-history-graph-card\";\nimport { EntityConfig } from \"../../entity-rows/types\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { configElementStyle } from \"./config-elements-style\";\n\nconst entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n  },\n  \"entity-id\",\n]);\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  entities: [entitiesConfigStruct],\n  title: \"string?\",\n  hours_to_show: \"number?\",\n  refresh_interval: \"number?\",\n});\n\n@customElement(\"hui-history-graph-card-editor\")\nexport class HuiHistoryGraphCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: HistoryGraphCardConfig;\n\n  @property() private _configEntities?: EntityConfig[];\n\n  public setConfig(config: HistoryGraphCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _hours_to_show(): number {\n    return this._config!.hours_to_show || 24;\n  }\n\n  get _refresh_interval(): number {\n    return this._config!.refresh_interval || 0;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <paper-input\n            type=\"number\"\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.hours_to_show\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._hours_to_show}\"\n            .configValue=${\"hours_to_show\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            type=\"number\"\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.refresh_interval\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._refresh_interval}\"\n            .configValue=${\"refresh_interval\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <hui-entity-editor\n          .hass=\"${this.hass}\"\n          .entities=\"${this._configEntities}\"\n          @entities-changed=\"${this._valueChanged}\"\n        ></hui-entity-editor>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (!ev.detail && this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n    } else if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = target.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = {\n          ...this._config,\n          [target.configValue!]: value,\n        };\n      }\n    }\n\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-history-graph-card-editor\": HuiHistoryGraphCardEditor;\n  }\n}\n"],"sourceRoot":""}