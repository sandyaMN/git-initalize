{"version":3,"sources":["webpack:///./src/panels/lovelace/editor/select-view/hui-dialog-select-view.ts"],"names":["HuiDialogSelectView","_decorate","customElement","_initialize","_LitElement","[object Object]","args","super","this","F","d","kind","decorators","property","key","value","async","params","_params","updateComplete","changedProps","_get","_getPrototypeOf","prototype","call","toggleAttribute","lovelace","config","views","some","view","icon","html","_openedChanged","_selectView","shadowRoot","querySelector","e","detail","viewSelectedCallback","_dialog","close","ev","undefined","LitElement"],"mappings":"iyDAmBO,IAAMA,80LAAbC,CAAA,CADCC,YAAc,2BACf,SAAAC,EAAAC,GADA,MACaJ,UADbI,EACoDC,eAAAC,GAAAC,SAAAD,GAAAH,EAAAK,OAApD,OAAAC,EAAaT,EAAbU,EAAA,EAAAC,KAAA,QAAAC,WAAA,CACGC,eADHC,IAAA,UAAAC,WAAA,IAAAJ,KAAA,SAAAG,IAAA,aAAAC,MAGEC,eAAwBC,GACtBT,KAAKU,QAAUD,QACTT,KAAKW,iBALf,CAAAR,KAAA,SAAAG,IAAA,UAAAC,MAQE,SAAkBK,GAChBC,EAAAC,EATStB,EASTuB,WAAA,UAAAf,MAAAgB,KAAAhB,KAAcY,GACdK,YACEjB,KACA,cACAA,KAAKU,QAASQ,SAAUC,SACnBnB,KAAKU,QAASQ,SAAUC,OAAOC,MAAMC,KAAMC,GAASA,EAAKC,SAdpE,CAAApB,KAAA,SAAAG,IAAA,SAAAC,MAmBE,WACE,OAAKP,KAAKU,QAGHc;;;;2BAIgBxB,KAAKyB;;;;0BAINzB,KAAKU,QAASQ,SAASC;yBACxBnB,KAAK0B;;;MAXjBF,QArBb,CAAArB,KAAA,MAAAG,IAAA,UAAAC,MAsCE,WACE,OAAOP,KAAK2B,WAAYC,cAAc,qBAvC1C,CAAAzB,KAAA,SAAAG,IAAA,cAAAC,MA0CE,SAAoBsB,GAClB,MAAMP,EAAeO,EAAEC,OAAOR,KAC9BtB,KAAKU,QAASqB,qBAAqBT,GACnCtB,KAAKgC,QAAQC,UA7CjB,CAAA9B,KAAA,SAAAG,IAAA,iBAAAC,MAgDE,SAAuB2B,GACfA,EAAGJ,OAAevB,QACtBP,KAAKU,aAAUyB,QAlDoBC","file":"chunk.dc79960489dffc235870.js","sourcesContent":["import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\n\nimport \"../../../../components/dialog/ha-paper-dialog\";\nimport { toggleAttribute } from \"../../../../common/dom/toggle_attribute\";\nimport \"../../components/hui-views-list\";\n\n// tslint:disable-next-line:no-duplicate-imports\nimport { HaPaperDialog } from \"../../../../components/dialog/ha-paper-dialog\";\n\nimport { SelectViewDialogParams } from \"./show-select-view-dialog\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\n\n@customElement(\"hui-dialog-select-view\")\nexport class HuiDialogSelectView extends LitElement {\n  @property() private _params?: SelectViewDialogParams;\n\n  public async showDialog(params: SelectViewDialogParams): Promise<void> {\n    this._params = params;\n    await this.updateComplete;\n  }\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n    toggleAttribute(\n      this,\n      \"hide-icons\",\n      this._params!.lovelace!.config\n        ? !this._params!.lovelace!.config.views.some((view) => view.icon)\n        : true\n    );\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this._params) {\n      return html``;\n    }\n    return html`\n      <ha-paper-dialog\n        with-backdrop\n        opened\n        @opened-changed=\"${this._openedChanged}\"\n      >\n        <h2>Choose a view</h2>\n        <hui-views-list \n        .lovelaceConfig=${this._params!.lovelace.config} \n        @view-selected=${this._selectView}>\n        </hui-view-list>\n      </ha-paper-dialog>\n    `;\n  }\n\n  private get _dialog(): HaPaperDialog {\n    return this.shadowRoot!.querySelector(\"ha-paper-dialog\")!;\n  }\n\n  private _selectView(e: CustomEvent): void {\n    const view: number = e.detail.view;\n    this._params!.viewSelectedCallback(view);\n    this._dialog.close();\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>): void {\n    if (!(ev.detail as any).value) {\n      this._params = undefined;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-dialog-select-view\": HuiDialogSelectView;\n  }\n}\n"],"sourceRoot":""}