{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/types.ts","webpack:///./src/panels/lovelace/components/hui-input-list-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-map-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","actionConfigStruct","entitiesConfigStruct","_common_structs_struct__WEBPACK_IMPORTED_MODULE_0__","action","navigation_path","url_path","service","service_data","union","entity","name","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","HuiInputListEditor","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","kind","decorators","property","key","_this2","html","_templateObject2","map","listEntry","index","_templateObject3","inputLabel","_valueChanged","_consolidateEntries","_removeEntry","_addEntry","_templateObject","ev","target","newEntries","fireEvent","blur","stopPropagation","splice","parent","currentTarget","parentElement","static","css","_templateObject4","LitElement","cardConfigStruct","type","title","aspect_ratio","default_zoom","dark_mode","entities","geo_location_sources","HuiMapCardEditor","hui_map_card_editor_decorate","hui_map_card_editor_classCallCheck","hui_map_card_editor_getPrototypeOf","hui_map_card_editor_assertThisInitialized","hui_map_card_editor_inherits","config","_config","_configEntities","processEditorEntities","NaN","hass","hui_map_card_editor_templateObject2","configElementStyle","localize","_title","_aspect_ratio","_default_zoom","_dark_mode","_entitiesValueChanged","_geo_location_sources","hui_map_card_editor_templateObject","detail","configValue","Number","isNaN","Object","assign","_defineProperty","undefined","checked","hui_map_card_editor_templateObject3"],"mappings":"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","file":"chunk.6fa05cafab8d5f630690.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  LovelaceCardConfig,\n  LovelaceViewConfig,\n  ActionConfig,\n} from \"../../../data/lovelace\";\nimport { EntityConfig } from \"../entity-rows/types\";\nimport { InputType } from \"zlib\";\nimport { struct } from \"../common/structs/struct\";\n\nexport interface YamlChangedEvent extends Event {\n  detail: {\n    yaml: string;\n  };\n}\n\nexport interface ViewEditEvent extends Event {\n  detail: {\n    config: LovelaceViewConfig;\n  };\n}\n\nexport interface ConfigValue {\n  format: \"json\" | \"yaml\";\n  value?: string | LovelaceCardConfig;\n}\n\nexport interface ConfigError {\n  type: string;\n  message: string;\n}\n\nexport interface EntitiesEditorEvent {\n  detail?: {\n    entities?: EntityConfig[];\n  };\n  target?: EventTarget;\n}\n\nexport interface EditorTarget extends EventTarget {\n  value?: string;\n  index?: number;\n  checked?: boolean;\n  configValue?: string;\n  type?: InputType;\n  config: ActionConfig;\n}\n\nexport interface CardPickTarget extends EventTarget {\n  type: string;\n}\n\nexport const actionConfigStruct = struct({\n  action: \"string\",\n  navigation_path: \"string?\",\n  url_path: \"string?\",\n  service: \"string?\",\n  service_data: \"object?\",\n});\n\nexport const entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n","import {\n  html,\n  css,\n  LitElement,\n  property,\n  TemplateResult,\n  CSSResult,\n  customElement,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\n\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-input-list-editor\")\nexport class HuiInputListEditor extends LitElement {\n  @property() protected value?: string[];\n  @property() protected hass?: HomeAssistant;\n  @property() protected inputLabel?: string;\n\n  protected render(): TemplateResult | void {\n    if (!this.value) {\n      return html``;\n    }\n\n    return html`\n      ${this.value.map((listEntry, index) => {\n        return html`\n          <paper-input\n            label=\"${this.inputLabel}\"\n            .value=\"${listEntry}\"\n            .configValue=\"${\"entry\"}\"\n            .index=\"${index}\"\n            @value-changed=\"${this._valueChanged}\"\n            @blur=\"${this._consolidateEntries}\"\n            ><paper-icon-button\n              slot=\"suffix\"\n              class=\"clear-button\"\n              icon=\"hass:close\"\n              no-ripple\n              @click=\"${this._removeEntry}\"\n              >Clear</paper-icon-button\n            ></paper-input\n          >\n        `;\n      })}\n      <paper-input\n        label=\"${this.inputLabel}\"\n        @change=\"${this._addEntry}\"\n      ></paper-input>\n    `;\n  }\n\n  private _addEntry(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newEntries = this.value!.concat(target.value as string);\n    target.value = \"\";\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n    (ev.target! as LitElement).blur();\n  }\n\n  private _valueChanged(ev: Event): void {\n    ev.stopPropagation();\n    const target = ev.target! as EditorTarget;\n    const newEntries = this.value!.concat();\n    newEntries[target.index!] = target.value!;\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n  }\n\n  private _consolidateEntries(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      const newEntries = this.value!.concat();\n      newEntries.splice(target.index!, 1);\n      fireEvent(this, \"value-changed\", {\n        value: newEntries,\n      });\n    }\n  }\n\n  private _removeEntry(ev: Event): void {\n    const parent = (ev.currentTarget as any).parentElement;\n    const newEntries = this.value!.concat();\n    newEntries.splice(parent.index!, 1);\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-input-list-editor\": HuiInputListEditor;\n  }\n}\n","import {\n  html,\n  css,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-entity-editor\";\nimport \"../../components/hui-input-list-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport {\n  EntitiesEditorEvent,\n  EditorTarget,\n  entitiesConfigStruct,\n} from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { EntityConfig } from \"../../entity-rows/types\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { MapCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  aspect_ratio: \"string?\",\n  default_zoom: \"number?\",\n  dark_mode: \"boolean?\",\n  entities: [entitiesConfigStruct],\n  geo_location_sources: \"array?\",\n});\n\n@customElement(\"hui-map-card-editor\")\nexport class HuiMapCardEditor extends LitElement implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: MapCardConfig;\n\n  @property() private _configEntities?: EntityConfig[];\n\n  public setConfig(config: MapCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _aspect_ratio(): string {\n    return this._config!.aspect_ratio || \"\";\n  }\n\n  get _default_zoom(): number {\n    return this._config!.default_zoom || NaN;\n  }\n\n  get _geo_location_sources(): string[] {\n    return this._config!.geo_location_sources || [];\n  }\n\n  get _dark_mode(): boolean {\n    return this._config!.dark_mode || false;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.aspect_ratio\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._aspect_ratio}\"\n            .configValue=\"${\"aspect_ratio\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.map.default_zoom\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            type=\"number\"\n            .value=\"${this._default_zoom}\"\n            .configValue=\"${\"default_zoom\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <ha-switch\n          ?checked=\"${this._dark_mode !== false}\"\n          .configValue=\"${\"dark_mode\"}\"\n          @change=\"${this._valueChanged}\"\n          >${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.map.dark_mode\"\n          )}</ha-switch\n        >\n        <hui-entity-editor\n          .hass=\"${this.hass}\"\n          .entities=\"${this._configEntities}\"\n          @entities-changed=\"${this._entitiesValueChanged}\"\n        ></hui-entity-editor>\n        <h3>\n          ${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.map.geo_location_sources\"\n          )}\n        </h3>\n        <div class=\"geo_location_sources\">\n          <hui-input-list-editor\n            inputLabel=${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.map.source\"\n            )}\n            .hass=\"${this.hass}\"\n            .value=\"${this._geo_location_sources}\"\n            .configValue=\"${\"geo_location_sources\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></hui-input-list-editor>\n        </div>\n      </div>\n    `;\n  }\n\n  private _entitiesValueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n      fireEvent(this, \"config-changed\", { config: this._config });\n    }\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<any>): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (target.configValue && this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    let value: any = target.value;\n    if (target.type === \"number\") {\n      value = Number(value);\n    }\n    if (target.value === \"\" || (target.type === \"number\" && isNaN(value))) {\n      delete this._config[target.configValue!];\n    } else if (target.configValue) {\n      this._config = {\n        ...this._config,\n        [target.configValue]:\n          target.checked !== undefined ? target.checked : value,\n      };\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .geo_location_sources {\n        padding-left: 20px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-map-card-editor\": HuiMapCardEditor;\n  }\n}\n"],"sourceRoot":""}