{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-light-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","HuiThemeSelectEditor","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","kind","decorators","property","key","themes","Object","keys","hass","sort","html","_templateObject","label","localize","_changed","map","theme","_templateObject2","static","css","_templateObject3","ev","target","fireEvent","LitElement","cardConfigStruct","type","name","entity","HuiLightCardEditor","config","_config","configElementStyle","_entity","_valueChanged","_name","_icon","_theme","configValue","assign"],"mappings":"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","file":"chunk.e954dbd1e533689a1380.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../components/hui-entity-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { LightCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  name: \"string?\",\n  entity: \"string?\",\n  theme: \"string?\",\n  icon: \"string?\",\n});\n\n@customElement(\"hui-light-card-editor\")\nexport class HuiLightCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: LightCardConfig;\n\n  public setConfig(config: LightCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"default\";\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _icon(): string {\n    return this._config!.icon || \"\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.entity\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .hass=\"${this.hass}\"\n          .value=\"${this._entity}\"\n          .configValue=${\"entity\"}\n          include-domains='[\"light\"]'\n          @change=\"${this._valueChanged}\"\n          allow-custom-entity\n        ></ha-entity-picker>\n        <div class=\"side-by-side\">\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.name\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._name}\"\n            .configValue=\"${\"name\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.icon\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._icon}\"\n            .configValue=\"${\"icon\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n\n        <hui-theme-select-editor\n          .hass=\"${this.hass}\"\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @theme-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-light-card-editor\": HuiLightCardEditor;\n  }\n}\n"],"sourceRoot":""}