{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/types.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-entities-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","HuiThemeSelectEditor","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","kind","decorators","property","key","themes","Object","keys","hass","sort","html","_templateObject","label","localize","_changed","map","theme","_templateObject2","static","css","_templateObject3","ev","target","fireEvent","LitElement","actionConfigStruct","entitiesConfigStruct","_common_structs_struct__WEBPACK_IMPORTED_MODULE_0__","action","navigation_path","url_path","service","service_data","union","entity","name","cardConfigStruct","type","title","show_header_toggle","entities","HuiEntitiesCardEditor","config","_config","_configEntities","processEditorEntities","configElementStyle","_title","_valueChanged","_theme","configValue","detail","assign","undefined","checked"],"mappings":"oGAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAIO,IAAMA,EAASC,YAAY,CAChCC,MAAO,CACLC,YCNG,SAAoBC,GACzB,MAAqB,iBAAVA,EACF,iCAEJA,EAAMC,SAAS,MACX,qDDEPC,KEPG,SAAgBF,GACrB,MAAqB,iBAAVA,EACF,4BAEJA,EAAMC,SAAS,MACX,s5QCqBXE,CAAA,CADCC,YAAc,4BACf,SAAAC,EAAAC,GAAA,OAAAC,EAAA,SAAAC,GAAA,SAAAC,IAAA,IAAAC,EAAAC,mGAAAC,CAAAC,KAAAJ,GAAA,QAAAK,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,SAAAN,KAAAF,OAAAD,EAAAU,EAAAX,IAAAY,KAAAC,MAAAZ,EAAA,CAAAG,MAAAU,OAAAN,mDAAAZ,EAAAmB,EAAAb,MAAA,yOAAAc,CAAAhB,EAAAH,GAAAG,EAAA,GAAAf,EAAA,EAAAgC,KAAA,QAAAC,WAAA,CACGC,eADHC,IAAA,QAAA7B,WAAA,IAAA0B,KAAA,QAAAC,WAAA,CAEGC,eAFHC,IAAA,QAAA7B,WAAA,IAAA0B,KAAA,QAAAC,WAAA,CAGGC,eAHHC,IAAA,OAAA7B,WAAA,IAAA0B,KAAA,SAAAG,IAAA,SAAA7B,MAKE,WACE,IAAM8B,EAAS,CAAC,mBAAoB,WAAWP,OAC7CQ,OAAOC,KAAKnB,KAAKoB,KAAMH,OAAOA,QAAQI,QAGxC,OAAOC,YAAPC,IAEavB,KAAKwB,OACZxB,KAAKoB,KAAMK,SAAS,+CAClB,KACAzB,KAAKoB,KAAMK,SACT,iDAEF,IAEczB,KAAK0B,SAIR1B,KAAKb,MAGhB8B,EAAOU,IAAI,SAACC,GACZ,OAAON,YAAPO,IACuBD,EAAUA,QA7B7C,CAAAf,KAAA,MAAAiB,QAAA,EAAAd,IAAA,SAAA7B,MAqCE,WACE,OAAO4C,YAAPC,OAtCJ,CAAAnB,KAAA,SAAAG,IAAA,WAAA7B,MA6CE,SAAiB8C,GACVjC,KAAKoB,MAA4B,KAApBa,EAAGC,OAAO/C,QAG5Ba,KAAKb,MAAQ8C,EAAGC,OAAO/C,MACvBgD,YAAUnC,KAAM,uBAlDsBoC,uCCnB1CxD,EAAAC,EAAAC,EAAA,sBAAAuD,IAAAzD,EAAAC,EAAAC,EAAA,sBAAAwD,IAAA,IAAAC,EAAA3D,EAAA,KA4CayD,EAAqBtD,YAAO,CACvCyD,OAAQ,SACRC,gBAAiB,UACjBC,SAAU,UACVC,QAAS,UACTC,aAAc,YAGHN,EAAuBvD,IAAO8D,MAAM,CAC/C,CACEC,OAAQ,YACRC,KAAM,UACN1D,KAAM,SAER,42FC/BF,IAAM2D,EAAmBjE,YAAO,CAC9BkE,KAAM,SACNC,MAAO,iBACPtB,MAAO,UACPuB,mBAAoB,WACpBC,SAAU,CAACd,OAIAe,80LAAb/D,CAAA,CADCC,YAAc,6BACf,SAAAC,EAAAC,GAAA,OAAAC,EAAA,SAAAC,GAAA,SAAA0D,IAAA,IAAAxD,EAAAC,mGAAAC,CAAAC,KAAAqD,GAAA,QAAApD,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,SAAAN,KAAAF,OAAAD,EAAAU,EAAA8C,IAAA7C,KAAAC,MAAAZ,EAAA,CAAAG,MAAAU,OAAAN,mDAAAZ,EAAAmB,EAAAb,MAAA,yOAAAc,CAAAyC,EAAA5D,GAAA4D,EAAA,GAAAxE,EAAA,EAAAgC,KAAA,QAAAC,WAAA,CAEGC,eAFHC,IAAA,OAAA7B,WAAA,IAAA0B,KAAA,QAAAC,WAAA,CAIGC,eAJHC,IAAA,UAAA7B,WAAA,IAAA0B,KAAA,QAAAC,WAAA,CAMGC,eANHC,IAAA,kBAAA7B,WAAA,IAAA0B,KAAA,SAAAG,IAAA,YAAA7B,MAQE,SAAiBmE,GACfA,EAASN,EAAiBM,GAC1BtD,KAAKuD,QAAUD,EACftD,KAAKwD,gBAAkBC,YAAsBH,EAAOF,YAXxD,CAAAvC,KAAA,MAAAG,IAAA,SAAA7B,MAcE,WACE,OAAOa,KAAKuD,QAASL,OAAS,KAflC,CAAArC,KAAA,MAAAG,IAAA,SAAA7B,MAkBE,WACE,OAAOa,KAAKuD,QAAS3B,OAAS,qBAnBlC,CAAAf,KAAA,SAAAG,IAAA,SAAA7B,MAsBE,WACE,OAAKa,KAAKoB,KAIHE,YAAPO,IACI6B,IAGY1D,KAAKoB,KAAKK,SAClB,+CACIzB,KAAKoB,KAAKK,SACd,iDAEQzB,KAAK2D,OACC,QACE3D,KAAK4D,cAGd5D,KAAKoB,KACJpB,KAAK6D,OACC,QACE7D,KAAK4D,eAG0B,IAArC5D,KAAKuD,QAASJ,mBACV,qBACLnD,KAAK4D,cACb5D,KAAKoB,KAAKK,SACX,6DAKKzB,KAAKoB,KACDpB,KAAKwD,gBACGxD,KAAK4D,eAlCrBtC,YAAPC,OAxBN,CAAAV,KAAA,SAAAG,IAAA,gBAAA7B,MA+DE,SAAsB8C,GACpB,GAAKjC,KAAKuD,SAAYvD,KAAKoB,KAA3B,CAIA,UAAMc,EAASD,EAAGC,OAElB,KAC2B,UAAxBA,EAAO4B,aAA4B5B,EAAO/C,QAAUa,KAAK2D,QACjC,UAAxBzB,EAAO4B,aAA4B5B,EAAO/C,QAAUa,KAAK6D,QAKxD5B,EAAG8B,QAAU9B,EAAG8B,OAAOX,UACzBpD,KAAKuD,QAAQH,SAAWnB,EAAG8B,OAAOX,SAClCpD,KAAKwD,gBAAkBC,YAAsBzD,KAAKuD,QAAQH,WACjDlB,EAAO4B,cACK,KAAjB5B,EAAO/C,aACFa,KAAKuD,QAAQrB,EAAO4B,aAE3B9D,KAAKuD,QAALrC,OAAA8C,OAAA,GACKhE,KAAKuD,WADV,KAEGrB,EAAO4B,mBACaG,IAAnB/B,EAAOgC,QAAwBhC,EAAOgC,QAAUhC,EAAO/C,wGAK/DgD,YAAUnC,KAAM,iBAAkB,CAAEsD,OAAQtD,KAAKuD,gBA5FVnB","file":"chunk.1ce52c2793ca49c02423.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import {\n  LovelaceCardConfig,\n  LovelaceViewConfig,\n  ActionConfig,\n} from \"../../../data/lovelace\";\nimport { EntityConfig } from \"../entity-rows/types\";\nimport { InputType } from \"zlib\";\nimport { struct } from \"../common/structs/struct\";\n\nexport interface YamlChangedEvent extends Event {\n  detail: {\n    yaml: string;\n  };\n}\n\nexport interface ViewEditEvent extends Event {\n  detail: {\n    config: LovelaceViewConfig;\n  };\n}\n\nexport interface ConfigValue {\n  format: \"json\" | \"yaml\";\n  value?: string | LovelaceCardConfig;\n}\n\nexport interface ConfigError {\n  type: string;\n  message: string;\n}\n\nexport interface EntitiesEditorEvent {\n  detail?: {\n    entities?: EntityConfig[];\n  };\n  target?: EventTarget;\n}\n\nexport interface EditorTarget extends EventTarget {\n  value?: string;\n  index?: number;\n  checked?: boolean;\n  configValue?: string;\n  type?: InputType;\n  config: ActionConfig;\n}\n\nexport interface CardPickTarget extends EventTarget {\n  type: string;\n}\n\nexport const actionConfigStruct = struct({\n  action: \"string\",\n  navigation_path: \"string?\",\n  url_path: \"string?\",\n  service: \"string?\",\n  service_data: \"object?\",\n});\n\nexport const entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport \"../../../../components/entity/state-badge\";\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../components/hui-entity-editor\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-icon\";\nimport \"../../../../components/ha-switch\";\n\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { struct } from \"../../common/structs/struct\";\nimport {\n  EntitiesEditorEvent,\n  EditorTarget,\n  entitiesConfigStruct,\n} from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport {\n  EntitiesCardConfig,\n  EntitiesCardEntityConfig,\n} from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string|number?\",\n  theme: \"string?\",\n  show_header_toggle: \"boolean?\",\n  entities: [entitiesConfigStruct],\n});\n\n@customElement(\"hui-entities-card-editor\")\nexport class HuiEntitiesCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: EntitiesCardConfig;\n\n  @property() private _configEntities?: EntitiesCardEntityConfig[];\n\n  public setConfig(config: EntitiesCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"Backend-selected\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <hui-theme-select-editor\n          .hass=\"${this.hass}\"\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @theme-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n        <ha-switch\n          ?checked=\"${this._config!.show_header_toggle !== false}\"\n          .configValue=\"${\"show_header_toggle\"}\"\n          @change=\"${this._valueChanged}\"\n          >${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.entities.show_header_toggle\"\n          )}</ha-switch\n        >\n      </div>\n      <hui-entity-editor\n        .hass=\"${this.hass}\"\n        .entities=\"${this._configEntities}\"\n        @entities-changed=\"${this._valueChanged}\"\n      ></hui-entity-editor>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n\n    const target = ev.target! as EditorTarget;\n\n    if (\n      (target.configValue! === \"title\" && target.value === this._title) ||\n      (target.configValue! === \"theme\" && target.value === this._theme)\n    ) {\n      return;\n    }\n\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n    } else if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue]:\n            target.checked !== undefined ? target.checked : target.value,\n        };\n      }\n    }\n\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entities-card-editor\": HuiEntitiesCardEditor;\n  }\n}\n"],"sourceRoot":""}