{"version":3,"sources":["webpack:///./src/common/dom/setup-leaflet-map.ts","webpack:///./src/data/core.ts","webpack:///./src/components/timezone-datalist.ts","webpack:///./src/components/map/ha-location-editor.ts","webpack:///./src/onboarding/onboarding-core-config.ts"],"names":["__webpack_require__","d","__webpack_exports__","setupLeafletMap","createTileLayer","mapElement","darkMode","Leaflet","map","style","_args","arguments","regeneratorRuntime","async","_context","prev","next","length","undefined","parentNode","Error","awrap","e","then","t","bind","sent","Icon","Default","imagePath","document","createElement","setAttribute","appendChild","setView","addTo","abrupt","stop","leaflet","tileLayer","concat","Browser","retina","attribution","subdomains","minZoom","maxZoom","saveCoreConfig","detectCoreConfig","hass","values","callWS","Object","assign","type","createTimezoneListEl","google_timezones_json__WEBPACK_IMPORTED_MODULE_0__","google_timezones_json__WEBPACK_IMPORTED_MODULE_0___default","n","list","id","keys","timezones","forEach","key","option","value","innerHTML","customElement","LocationEditor","property","this","_leafletMap","location","fitZoom","html","_templateObject","changedProps","_get","_getPrototypeOf","prototype","call","_initMap","_updateMarker","_ignoreFitToMap","fitMap","shadowRoot","querySelector","_ref","_ref2","_this2","_mapEl","_slicedToArray","addEventListener","ev","_updateLocation","latlng","invalidateSize","longitude","lng","Math","abs","lat","fireEvent","bubbles","_this3","_locationMarker","setLatLng","marker","draggable","target","getLatLng","addLayer","remove","css","_templateObject2","LitElement","amsterdam","OnboardingCoreConfig","onboardingLocalize","user","name","_working","_nameValue","_handleChange","_detect","_locationValue","_locationChanged","localize","_timeZoneValue","_elevationValue","_unitSystemValue","_unitSystemChanged","_save","setTimeout","focus","keyCode","inputElement","_name","_location","_elevation","_timeZone","_unitSystem","currentTarget","detail","latitude","Number","elevation","String","unit_system","time_zone","t0","alert","message","finish","result","_context2","preventDefault","location_name","onboardCoreConfigStep"],"mappings":"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","file":"chunk.b813dd4118880c2398ce.js","sourcesContent":["import { Map } from \"leaflet\";\n\n// Sets up a Leaflet map on the provided DOM element\nexport type LeafletModuleType = typeof import(\"leaflet\");\n\nexport const setupLeafletMap = async (\n  mapElement: HTMLElement,\n  darkMode = false\n): Promise<[Map, LeafletModuleType]> => {\n  if (!mapElement.parentNode) {\n    throw new Error(\"Cannot setup Leaflet map on disconnected element\");\n  }\n  // tslint:disable-next-line\n  const Leaflet = (await import(\n    /* webpackChunkName: \"leaflet\" */ \"leaflet\"\n  )) as LeafletModuleType;\n  Leaflet.Icon.Default.imagePath = \"/static/images/leaflet/images/\";\n\n  const map = Leaflet.map(mapElement);\n  const style = document.createElement(\"link\");\n  style.setAttribute(\"href\", \"/static/images/leaflet/leaflet.css\");\n  style.setAttribute(\"rel\", \"stylesheet\");\n  mapElement.parentNode.appendChild(style);\n  map.setView([52.3731339, 4.8903147], 13);\n  createTileLayer(Leaflet, darkMode).addTo(map);\n\n  return [map, Leaflet];\n};\n\nexport const createTileLayer = (\n  leaflet: LeafletModuleType,\n  darkMode: boolean\n) => {\n  return leaflet.tileLayer(\n    `https://{s}.basemaps.cartocdn.com/${\n      darkMode ? \"dark_all\" : \"light_all\"\n    }/{z}/{x}/{y}${leaflet.Browser.retina ? \"@2x.png\" : \".png\"}`,\n    {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: \"abcd\",\n      minZoom: 0,\n      maxZoom: 20,\n    }\n  );\n};\n","import { HomeAssistant } from \"../types\";\nimport { HassConfig } from \"home-assistant-js-websocket\";\n\nexport interface ConfigUpdateValues {\n  location_name: string;\n  latitude: number;\n  longitude: number;\n  elevation: number;\n  unit_system: \"metric\" | \"imperial\";\n  time_zone: string;\n}\n\nexport const saveCoreConfig = (\n  hass: HomeAssistant,\n  values: Partial<ConfigUpdateValues>\n) =>\n  hass.callWS<HassConfig>({\n    type: \"config/core/update\",\n    ...values,\n  });\n\nexport const detectCoreConfig = (hass: HomeAssistant) =>\n  hass.callWS<Partial<ConfigUpdateValues>>({\n    type: \"config/core/detect\",\n  });\n","import timezones from \"google-timezones-json\";\n\nexport const createTimezoneListEl = () => {\n  const list = document.createElement(\"datalist\");\n  list.id = \"timezones\";\n  Object.keys(timezones).forEach((key) => {\n    const option = document.createElement(\"option\");\n    option.value = key;\n    option.innerHTML = timezones[key];\n    list.appendChild(option);\n  });\n  return list;\n};\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n  customElement,\n  PropertyValues,\n} from \"lit-element\";\nimport { Marker, Map, LeafletMouseEvent, DragEndEvent, LatLng } from \"leaflet\";\nimport {\n  setupLeafletMap,\n  LeafletModuleType,\n} from \"../../common/dom/setup-leaflet-map\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\n@customElement(\"ha-location-editor\")\nclass LocationEditor extends LitElement {\n  @property() public location?: [number, number];\n  public fitZoom = 16;\n\n  private _ignoreFitToMap?: [number, number];\n\n  // tslint:disable-next-line\n  private Leaflet?: LeafletModuleType;\n  private _leafletMap?: Map;\n  private _locationMarker?: Marker;\n\n  public fitMap(): void {\n    if (!this._leafletMap || !this.location) {\n      return;\n    }\n    this._leafletMap.setView(this.location, this.fitZoom);\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <div id=\"map\"></div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._initMap();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    // Still loading.\n    if (!this.Leaflet) {\n      return;\n    }\n\n    this._updateMarker();\n    if (!this._ignoreFitToMap || this._ignoreFitToMap !== this.location) {\n      this.fitMap();\n    }\n    this._ignoreFitToMap = undefined;\n  }\n\n  private get _mapEl(): HTMLDivElement {\n    return this.shadowRoot!.querySelector(\"div\")!;\n  }\n\n  private async _initMap(): Promise<void> {\n    [this._leafletMap, this.Leaflet] = await setupLeafletMap(this._mapEl);\n    this._leafletMap.addEventListener(\n      \"click\",\n      // @ts-ignore\n      (ev: LeafletMouseEvent) => this._updateLocation(ev.latlng)\n    );\n    this._updateMarker();\n    this.fitMap();\n    this._leafletMap.invalidateSize();\n  }\n\n  private _updateLocation(latlng: LatLng) {\n    let longitude = latlng.lng;\n    if (Math.abs(longitude) > 180.0) {\n      // Normalize longitude if map provides values beyond -180 to +180 degrees.\n      longitude = (((longitude % 360.0) + 540.0) % 360.0) - 180.0;\n    }\n    this.location = this._ignoreFitToMap = [latlng.lat, longitude];\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _updateMarker(): void {\n    if (!this.location) {\n      if (this._locationMarker) {\n        this._locationMarker.remove();\n        this._locationMarker = undefined;\n      }\n      return;\n    }\n\n    if (this._locationMarker) {\n      this._locationMarker.setLatLng(this.location);\n      return;\n    }\n    this._locationMarker = this.Leaflet!.marker(this.location, {\n      draggable: true,\n    });\n    this._locationMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._updateLocation(ev.target.getLatLng())\n    );\n    this._leafletMap!.addLayer(this._locationMarker);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 300px;\n      }\n      #map {\n        height: 100%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-location-editor\": LocationEditor;\n  }\n}\n","import {\n  LitElement,\n  customElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-radio-group/paper-radio-group\";\nimport \"@polymer/paper-radio-button/paper-radio-button\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { HomeAssistant } from \"../types\";\nimport {\n  ConfigUpdateValues,\n  detectCoreConfig,\n  saveCoreConfig,\n} from \"../data/core\";\nimport { PolymerChangedEvent } from \"../polymer-types\";\nimport { onboardCoreConfigStep } from \"../data/onboarding\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { createTimezoneListEl } from \"../components/timezone-datalist\";\nimport \"../components/map/ha-location-editor\";\n\nconst amsterdam = [52.3731339, 4.8903147];\n\n@customElement(\"onboarding-core-config\")\nclass OnboardingCoreConfig extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public onboardingLocalize!: LocalizeFunc;\n\n  @property() private _working = false;\n\n  @property() private _name!: ConfigUpdateValues[\"location_name\"];\n  @property() private _location!: [number, number];\n  @property() private _elevation!: string;\n  @property() private _unitSystem!: ConfigUpdateValues[\"unit_system\"];\n  @property() private _timeZone!: string;\n\n  protected render(): TemplateResult | void {\n    return html`\n      <p>\n        ${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.intro\",\n          \"name\",\n          this.hass.user!.name\n        )}\n      </p>\n\n      <paper-input\n        .label=${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name\"\n        )}\n        name=\"name\"\n        .disabled=${this._working}\n        .value=${this._nameValue}\n        @value-changed=${this._handleChange}\n      ></paper-input>\n\n      <div class=\"middle-text\">\n        <p>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.intro_location\"\n          )}\n        </p>\n\n        <div class=\"row\">\n          <div>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.intro_location_detect\"\n            )}\n          </div>\n          <mwc-button @click=${this._detect}>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.button_detect\"\n            )}\n          </mwc-button>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <ha-location-editor\n          class=\"flex\"\n          .location=${this._locationValue}\n          .fitZoom=${14}\n          @change=${this._locationChanged}\n        ></ha-location-editor>\n      </div>\n\n      <div class=\"row\">\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.time_zone\"\n          )}\n          name=\"timeZone\"\n          list=\"timezones\"\n          .disabled=${this._working}\n          .value=${this._timeZoneValue}\n          @value-changed=${this._handleChange}\n        ></paper-input>\n\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.elevation\"\n          )}\n          name=\"elevation\"\n          type=\"number\"\n          .disabled=${this._working}\n          .value=${this._elevationValue}\n          @value-changed=${this._handleChange}\n        >\n          <span slot=\"suffix\">\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.elevation_meters\"\n            )}\n          </span>\n        </paper-input>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"flex\">\n          ${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.unit_system\"\n          )}\n        </div>\n        <paper-radio-group\n          class=\"flex\"\n          .selected=${this._unitSystemValue}\n          @selected-changed=${this._unitSystemChanged}\n        >\n          <paper-radio-button name=\"metric\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_metric\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.metric_example\"\n              )}\n            </div>\n          </paper-radio-button>\n          <paper-radio-button name=\"imperial\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_imperial\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.imperial_example\"\n              )}\n            </div>\n          </paper-radio-button>\n        </paper-radio-group>\n      </div>\n\n      <div class=\"footer\">\n        <mwc-button @click=${this._save} .disabled=${this._working}>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.finish\"\n          )}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    setTimeout(\n      () => this.shadowRoot!.querySelector(\"paper-input\")!.focus(),\n      100\n    );\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._save(ev);\n      }\n    });\n    const input = this.shadowRoot!.querySelector(\n      \"[name=timeZone]\"\n    ) as PaperInputElement;\n    input.inputElement.appendChild(createTimezoneListEl());\n  }\n\n  private get _nameValue() {\n    return this._name !== undefined\n      ? this._name\n      : this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name_default\"\n        );\n  }\n\n  private get _locationValue() {\n    return this._location || amsterdam;\n  }\n\n  private get _elevationValue() {\n    return this._elevation !== undefined ? this._elevation : 0;\n  }\n\n  private get _timeZoneValue() {\n    return this._timeZone;\n  }\n\n  private get _unitSystemValue() {\n    return this._unitSystem !== undefined ? this._unitSystem : \"metric\";\n  }\n\n  private _handleChange(ev: PolymerChangedEvent<string>) {\n    const target = ev.currentTarget as PaperInputElement;\n    this[`_${target.name}`] = target.value;\n  }\n\n  private _locationChanged(ev) {\n    this._location = ev.currentTarget.location;\n  }\n\n  private _unitSystemChanged(\n    ev: PolymerChangedEvent<ConfigUpdateValues[\"unit_system\"]>\n  ) {\n    this._unitSystem = ev.detail.value;\n  }\n\n  private async _detect() {\n    this._working = true;\n    try {\n      const values = await detectCoreConfig(this.hass);\n      if (values.latitude && values.longitude) {\n        this._location = [Number(values.latitude), Number(values.longitude)];\n      }\n      if (values.elevation) {\n        this._elevation = String(values.elevation);\n      }\n      if (values.unit_system) {\n        this._unitSystem = values.unit_system;\n      }\n      if (values.time_zone) {\n        this._timeZone = values.time_zone;\n      }\n    } catch (err) {\n      alert(`Failed to detect location information: ${err.message}`);\n    } finally {\n      this._working = false;\n    }\n  }\n\n  private async _save(ev) {\n    ev.preventDefault();\n    this._working = true;\n    try {\n      const location = this._locationValue;\n      await saveCoreConfig(this.hass, {\n        location_name: this._nameValue,\n        latitude: location[0],\n        longitude: location[1],\n        elevation: Number(this._elevationValue),\n        unit_system: this._unitSystemValue,\n        time_zone: this._timeZoneValue || \"UTC\",\n      });\n      const result = await onboardCoreConfigStep(this.hass);\n      fireEvent(this, \"onboarding-step\", {\n        type: \"core_config\",\n        result,\n      });\n    } catch (err) {\n      this._working = false;\n      alert(\"FAIL\");\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .row {\n        display: flex;\n        flex-direction: row;\n        margin: 0 -8px;\n        align-items: center;\n      }\n\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n\n      .flex {\n        flex: 1;\n      }\n\n      .middle-text {\n        margin: 24px 0;\n      }\n\n      .row > * {\n        margin: 0 8px;\n      }\n      .footer {\n        margin-top: 16px;\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-core-config\": OnboardingCoreConfig;\n  }\n}\n"],"sourceRoot":""}