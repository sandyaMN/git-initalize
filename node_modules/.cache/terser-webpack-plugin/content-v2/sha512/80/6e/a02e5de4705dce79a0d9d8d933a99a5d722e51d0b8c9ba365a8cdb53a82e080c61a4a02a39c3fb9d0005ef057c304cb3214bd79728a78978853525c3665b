{"map":"{\"version\":3,\"sources\":[\"/home/sandya/Sandya/workspace/Brandon/home-assistant-polymer/src/panels/config/cloud/google-assistant/cloud-google-assistant.ts\",\"/home/sandya/Sandya/workspace/Brandon/home-assistant-polymer/src/data/google_assistant.ts\"],\"names\":[\"configIsExposed\",\"config\",\"undefined\",\"should_expose\",\"customElement\",\"CloudGoogleAssistant\",\"_LitElement\",\"[object Object]\",\"args\",\"super\",\"_initialize\",\"this\",\"property\",\"memoizeOne\",\"filter\",\"generateFilter\",\"include_domains\",\"include_entities\",\"exclude_domains\",\"exclude_entities\",\"_entities\",\"html\",\"emptyFilter\",\"isEmptyFilter\",\"cloudStatus\",\"google_entities\",\"filterFunc\",\"_getEntityFilterFunc\",\"showInExposed\",\"_isInitialExposed\",\"Set\",\"trackExposed\",\"selected\",\"exposedCards\",\"notExposedCards\",\"forEach\",\"entity\",\"stateObj\",\"hass\",\"states\",\"entity_id\",\"_entityConfigs\",\"isExposed\",\"add\",\"has\",\"push\",\"_showMoreInfo\",\"traits\",\"map\",\"trait\",\"substr\",\"lastIndexOf\",\"join\",\"_exposeChanged\",\"localize\",\"might_2fa\",\"Boolean\",\"disable_2fa\",\"_disable2FAChanged\",\"narrow\",\"_openDomainToggler\",\"length\",\"changedProps\",\"_get\",\"_getPrototypeOf\",\"prototype\",\"call\",\"_fetchData\",\"prefs\",\"google_entity_configs\",\"async\",\"entities\",\"callWS\",\"type\",\"fetchCloudGoogleEntities\",\"sort\",\"a\",\"b\",\"stateA\",\"stateB\",\"compare\",\"computeStateName\",\"ev\",\"entityId\",\"currentTarget\",\"fireEvent\",\"newExposed\",\"target\",\"checked\",\"_updateExposed\",\"_updateConfig\",\"_ensureEntitySync\",\"newDisable2FA\",\"values\",\"updatedConfig\",\"updateCloudGoogleEntityConfig\",\"Object\",\"assign\",\"_ensureStatusReload\",\"showDomainTogglerDialog\",\"domains\",\"computeDomain\",\"value\",\"idx\",\"self\",\"indexOf\",\"toggleDomain\",\"domain\",\"turnOn\",\"_popstateReloadStatusAttached\",\"parent\",\"parentElement\",\"window\",\"addEventListener\",\"once\",\"_popstateSyncAttached\",\"showToast\",\"message\",\"cloudSyncGoogleAssistant\",\"css\",\"LitElement\"],\"mappings\":\"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\",\"sourcesContent\":[\"import {\\n  LitElement,\\n  TemplateResult,\\n  html,\\n  CSSResult,\\n  css,\\n  customElement,\\n  property,\\n} from \\\"lit-element\\\";\\nimport memoizeOne from \\\"memoize-one\\\";\\nimport \\\"@polymer/paper-icon-button\\\";\\n\\nimport \\\"../../../../layouts/hass-subpage\\\";\\nimport \\\"../../../../layouts/hass-loading-screen\\\";\\nimport \\\"../../../../components/ha-card\\\";\\nimport \\\"../../../../components/entity/state-info\\\";\\nimport \\\"../../../../components/ha-switch\\\";\\n\\nimport { HomeAssistant } from \\\"../../../../types\\\";\\nimport {\\n  CloudStatusLoggedIn,\\n  CloudPreferences,\\n  updateCloudGoogleEntityConfig,\\n  cloudSyncGoogleAssistant,\\n  GoogleEntityConfig,\\n} from \\\"../../../../data/cloud\\\";\\nimport {\\n  generateFilter,\\n  isEmptyFilter,\\n  EntityFilter,\\n} from \\\"../../../../common/entity/entity_filter\\\";\\nimport { compare } from \\\"../../../../common/string/compare\\\";\\nimport { fireEvent } from \\\"../../../../common/dom/fire_event\\\";\\nimport { showToast } from \\\"../../../../util/toast\\\";\\nimport { showDomainTogglerDialog } from \\\"../../../../dialogs/domain-toggler/show-dialog-domain-toggler\\\";\\nimport {\\n  GoogleEntity,\\n  fetchCloudGoogleEntities,\\n} from \\\"../../../../data/google_assistant\\\";\\n// tslint:disable-next-line: no-duplicate-imports\\nimport { HaSwitch } from \\\"../../../../components/ha-switch\\\";\\n\\nimport { computeStateName } from \\\"../../../../common/entity/compute_state_name\\\";\\nimport { computeDomain } from \\\"../../../../common/entity/compute_domain\\\";\\n\\nconst DEFAULT_CONFIG_EXPOSE = true;\\n\\nconst configIsExposed = (config: GoogleEntityConfig) =>\\n  config.should_expose === undefined\\n    ? DEFAULT_CONFIG_EXPOSE\\n    : config.should_expose;\\n\\n@customElement(\\\"cloud-google-assistant\\\")\\nclass CloudGoogleAssistant extends LitElement {\\n  @property() public hass!: HomeAssistant;\\n  @property() public cloudStatus!: CloudStatusLoggedIn;\\n  @property() public narrow!: boolean;\\n  @property() private _entities?: GoogleEntity[];\\n  @property()\\n  private _entityConfigs: CloudPreferences[\\\"google_entity_configs\\\"] = {};\\n  private _popstateSyncAttached = false;\\n  private _popstateReloadStatusAttached = false;\\n  private _isInitialExposed?: Set<string>;\\n\\n  private _getEntityFilterFunc = memoizeOne((filter: EntityFilter) =>\\n    generateFilter(\\n      filter.include_domains,\\n      filter.include_entities,\\n      filter.exclude_domains,\\n      filter.exclude_entities\\n    )\\n  );\\n\\n  protected render(): TemplateResult | void {\\n    if (this._entities === undefined) {\\n      return html`\\n        <hass-loading-screen></hass-loading-screen>\\n      `;\\n    }\\n    const emptyFilter = isEmptyFilter(this.cloudStatus.google_entities);\\n    const filterFunc = this._getEntityFilterFunc(\\n      this.cloudStatus.google_entities\\n    );\\n\\n    // We will only generate `isInitialExposed` during first render.\\n    // On each subsequent render we will use the same set so that cards\\n    // will not jump around when we change the exposed setting.\\n    const showInExposed = this._isInitialExposed || new Set();\\n    const trackExposed = this._isInitialExposed === undefined;\\n\\n    let selected = 0;\\n\\n    // On first render we decide which cards show in which category.\\n    // That way cards won't jump around when changing values.\\n    const exposedCards: TemplateResult[] = [];\\n    const notExposedCards: TemplateResult[] = [];\\n\\n    this._entities.forEach((entity) => {\\n      const stateObj = this.hass.states[entity.entity_id];\\n      const config = this._entityConfigs[entity.entity_id] || {};\\n      const isExposed = emptyFilter\\n        ? configIsExposed(config)\\n        : filterFunc(entity.entity_id);\\n      if (isExposed) {\\n        selected++;\\n\\n        if (trackExposed) {\\n          showInExposed.add(entity.entity_id);\\n        }\\n      }\\n\\n      const target = showInExposed.has(entity.entity_id)\\n        ? exposedCards\\n        : notExposedCards;\\n\\n      target.push(html`\\n        <ha-card>\\n          <div class=\\\"card-content\\\">\\n            <state-info\\n              .hass=${this.hass}\\n              .stateObj=${stateObj}\\n              secondary-line\\n              @click=${this._showMoreInfo}\\n            >\\n              ${entity.traits\\n                .map((trait) => trait.substr(trait.lastIndexOf(\\\".\\\") + 1))\\n                .join(\\\", \\\")}\\n            </state-info>\\n            <ha-switch\\n              .entityId=${entity.entity_id}\\n              .disabled=${!emptyFilter}\\n              .checked=${isExposed}\\n              @change=${this._exposeChanged}\\n            >\\n              ${this.hass!.localize(\\\"ui.panel.config.cloud.google.expose\\\")}\\n            </ha-switch>\\n            ${entity.might_2fa\\n              ? html`\\n                  <ha-switch\\n                    .entityId=${entity.entity_id}\\n                    .checked=${Boolean(config.disable_2fa)}\\n                    @change=${this._disable2FAChanged}\\n                  >\\n                    ${this.hass!.localize(\\n                      \\\"ui.panel.config.cloud.google.disable_2FA\\\"\\n                    )}\\n                  </ha-switch>\\n                `\\n              : \\\"\\\"}\\n          </div>\\n        </ha-card>\\n      `);\\n    });\\n\\n    if (trackExposed) {\\n      this._isInitialExposed = showInExposed;\\n    }\\n\\n    return html`\\n      <hass-subpage header=\\\"${this.hass!.localize(\\n        \\\"ui.panel.config.cloud.google.title\\\"\\n      )}\\\">\\n        <span slot=\\\"toolbar-icon\\\">\\n          ${selected}${\\n      !this.narrow\\n        ? html`\\n            selected\\n          `\\n        : \\\"\\\"\\n    }\\n        </span>\\n        ${\\n          emptyFilter\\n            ? html`\\n                <paper-icon-button\\n                  slot=\\\"toolbar-icon\\\"\\n                  icon=\\\"hass:tune\\\"\\n                  @click=${this._openDomainToggler}\\n                ></paper-icon-button>\\n              `\\n            : \\\"\\\"\\n        }\\n        ${\\n          !emptyFilter\\n            ? html`\\n                <div class=\\\"banner\\\">\\n                  ${this.hass!.localize(\\\"ui.panel.config.cloud.google.banner\\\")}\\n                </div>\\n              `\\n            : \\\"\\\"\\n        }\\n          ${\\n            exposedCards.length > 0\\n              ? html`\\n                  <h1>\\n                    ${this.hass!.localize(\\n                      \\\"ui.panel.config.cloud.google.exposed_entities\\\"\\n                    )}\\n                  </h1>\\n                  <div class=\\\"content\\\">${exposedCards}</div>\\n                `\\n              : \\\"\\\"\\n          }\\n          ${\\n            notExposedCards.length > 0\\n              ? html`\\n                  <h1>\\n                    ${this.hass!.localize(\\n                      \\\"ui.panel.config.cloud.google.not_exposed_entities\\\"\\n                    )}\\n                  </h1>\\n                  <div class=\\\"content\\\">${notExposedCards}</div>\\n                `\\n              : \\\"\\\"\\n          }\\n        </div>\\n      </hass-subpage>\\n    `;\\n  }\\n\\n  protected firstUpdated(changedProps) {\\n    super.firstUpdated(changedProps);\\n    this._fetchData();\\n  }\\n\\n  protected updated(changedProps) {\\n    super.updated(changedProps);\\n    if (changedProps.has(\\\"cloudStatus\\\")) {\\n      this._entityConfigs = this.cloudStatus.prefs.google_entity_configs;\\n    }\\n  }\\n\\n  private async _fetchData() {\\n    const entities = await fetchCloudGoogleEntities(this.hass);\\n    entities.sort((a, b) => {\\n      const stateA = this.hass.states[a.entity_id];\\n      const stateB = this.hass.states[b.entity_id];\\n      return compare(\\n        stateA ? computeStateName(stateA) : a.entity_id,\\n        stateB ? computeStateName(stateB) : b.entity_id\\n      );\\n    });\\n    this._entities = entities;\\n  }\\n\\n  private _showMoreInfo(ev) {\\n    const entityId = ev.currentTarget.stateObj.entity_id;\\n    fireEvent(this, \\\"hass-more-info\\\", { entityId });\\n  }\\n\\n  private async _exposeChanged(ev: Event) {\\n    const entityId = (ev.currentTarget as any).entityId;\\n    const newExposed = (ev.target as HaSwitch).checked;\\n    await this._updateExposed(entityId, newExposed);\\n  }\\n\\n  private async _updateExposed(entityId: string, newExposed: boolean) {\\n    const curExposed = configIsExposed(this._entityConfigs[entityId] || {});\\n    if (newExposed === curExposed) {\\n      return;\\n    }\\n    await this._updateConfig(entityId, {\\n      should_expose: newExposed,\\n    });\\n    this._ensureEntitySync();\\n  }\\n\\n  private async _disable2FAChanged(ev: Event) {\\n    const entityId = (ev.currentTarget as any).entityId;\\n    const newDisable2FA = (ev.target as HaSwitch).checked;\\n    const curDisable2FA = Boolean(\\n      (this._entityConfigs[entityId] || {}).disable_2fa\\n    );\\n    if (newDisable2FA === curDisable2FA) {\\n      return;\\n    }\\n    await this._updateConfig(entityId, {\\n      disable_2fa: newDisable2FA,\\n    });\\n  }\\n\\n  private async _updateConfig(entityId: string, values: GoogleEntityConfig) {\\n    const updatedConfig = await updateCloudGoogleEntityConfig(\\n      this.hass,\\n      entityId,\\n      values\\n    );\\n    this._entityConfigs = {\\n      ...this._entityConfigs,\\n      [entityId]: updatedConfig,\\n    };\\n    this._ensureStatusReload();\\n  }\\n\\n  private _openDomainToggler() {\\n    showDomainTogglerDialog(this, {\\n      domains: this._entities!.map((entity) =>\\n        computeDomain(entity.entity_id)\\n      ).filter((value, idx, self) => self.indexOf(value) === idx),\\n      toggleDomain: (domain, turnOn) => {\\n        this._entities!.forEach((entity) => {\\n          if (computeDomain(entity.entity_id) === domain) {\\n            this._updateExposed(entity.entity_id, turnOn);\\n          }\\n        });\\n      },\\n    });\\n  }\\n\\n  private _ensureStatusReload() {\\n    if (this._popstateReloadStatusAttached) {\\n      return;\\n    }\\n    this._popstateReloadStatusAttached = true;\\n    // Cache parent because by the time popstate happens,\\n    // this element is detached\\n    const parent = this.parentElement!;\\n    window.addEventListener(\\n      \\\"popstate\\\",\\n      () => fireEvent(parent, \\\"ha-refresh-cloud-status\\\"),\\n      { once: true }\\n    );\\n  }\\n\\n  private _ensureEntitySync() {\\n    if (this._popstateSyncAttached) {\\n      return;\\n    }\\n    this._popstateSyncAttached = true;\\n    // Cache parent because by the time popstate happens,\\n    // this element is detached\\n    const parent = this.parentElement!;\\n    window.addEventListener(\\n      \\\"popstate\\\",\\n      () => {\\n        showToast(parent, {\\n          message: this.hass!.localize(\\n            \\\"ui.panel.config.cloud.googe.sync_to_google\\\"\\n          ),\\n        });\\n        cloudSyncGoogleAssistant(this.hass);\\n      },\\n      { once: true }\\n    );\\n  }\\n\\n  static get styles(): CSSResult {\\n    return css`\\n      .banner {\\n        color: var(--primary-text-color);\\n        background-color: var(\\n          --ha-card-background,\\n          var(--paper-card-background-color, white)\\n        );\\n        padding: 16px 8px;\\n        text-align: center;\\n      }\\n      h1 {\\n        color: var(--primary-text-color);\\n        font-size: 24px;\\n        letter-spacing: -0.012em;\\n        margin-bottom: 0;\\n        padding: 0 8px;\\n      }\\n      .content {\\n        display: flex;\\n        flex-wrap: wrap;\\n        padding: 4px;\\n      }\\n      ha-card {\\n        margin: 4px;\\n        width: 100%;\\n        max-width: 300px;\\n      }\\n      .card-content {\\n        padding-bottom: 12px;\\n      }\\n      state-info {\\n        cursor: pointer;\\n      }\\n      ha-switch {\\n        padding: 8px 0;\\n      }\\n\\n      @media all and (max-width: 450px) {\\n        ha-card {\\n          max-width: 100%;\\n        }\\n      }\\n    `;\\n  }\\n}\\n\\ndeclare global {\\n  interface HTMLElementTagNameMap {\\n    \\\"cloud-google-assistant\\\": CloudGoogleAssistant;\\n  }\\n}\\n\",\"import { HomeAssistant } from \\\"../types\\\";\\n\\nexport interface GoogleEntity {\\n  entity_id: string;\\n  traits: string[];\\n  might_2fa: boolean;\\n}\\n\\nexport const fetchCloudGoogleEntities = (hass: HomeAssistant) =>\\n  hass.callWS<GoogleEntity[]>({ type: \\\"cloud/google_assistant/entities\\\" });\\n\"]}","code":"(self.webpackJsonp=self.webpackJsonp||[]).push([[24],{771:function(e,t,i){\"use strict\";i.r(t);var n=i(0),r=i(119),o=(i(105),i(148),i(156),i(173),i(188),i(195),i(289)),s=i(504),a=i(199),c=i(14),l=i(47),d=i(505);var h=i(172),p=i(116);function u(e){var t,i=v(e.key);\"method\"===e.kind?t={value:e.value,writable:!0,configurable:!0,enumerable:!1}:\"get\"===e.kind?t={get:e.value,configurable:!0,enumerable:!1}:\"set\"===e.kind?t={set:e.value,configurable:!0,enumerable:!1}:\"field\"===e.kind&&(t={configurable:!0,writable:!0,enumerable:!0});var n={kind:\"field\"===e.kind?\"field\":\"method\",key:i,placement:e.static?\"static\":\"field\"===e.kind?\"own\":\"prototype\",descriptor:t};return e.decorators&&(n.decorators=e.decorators),\"field\"===e.kind&&(n.initializer=e.value),n}function f(e,t){void 0!==e.descriptor.get?t.descriptor.get=e.descriptor.get:t.descriptor.set=e.descriptor.set}function y(e){return e.decorators&&e.decorators.length}function m(e){return void 0!==e&&!(void 0===e.value&&void 0===e.writable)}function g(e,t){var i=e[t];if(void 0!==i&&\"function\"!=typeof i)throw new TypeError(\"Expected '\"+t+\"' to be a function\");return i}function v(e){var t=function(e,t){if(\"object\"!=typeof e||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var n=i.call(e,t||\"default\");if(\"object\"!=typeof n)return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==typeof t?t:String(t)}function b(e,t,i){return(b=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,i){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}(e,t);if(n){var r=Object.getOwnPropertyDescriptor(n,t);return r.get?r.get.call(i):r.value}})(e,t,i||e)}function k(e){return(k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}const _=e=>void 0===e.should_expose||e.should_expose;!function(e,t,i,n){var r=function(){var e={elementsDefinitionOrder:[[\"method\"],[\"field\"]],initializeInstanceElements:function(e,t){[\"method\",\"field\"].forEach(function(i){t.forEach(function(t){t.kind===i&&\"own\"===t.placement&&this.defineClassElement(e,t)},this)},this)},initializeClassElements:function(e,t){var i=e.prototype;[\"method\",\"field\"].forEach(function(n){t.forEach(function(t){var r=t.placement;if(t.kind===n&&(\"static\"===r||\"prototype\"===r)){var o=\"static\"===r?e:i;this.defineClassElement(o,t)}},this)},this)},defineClassElement:function(e,t){var i=t.descriptor;if(\"field\"===t.kind){var n=t.initializer;i={enumerable:i.enumerable,writable:i.writable,configurable:i.configurable,value:void 0===n?void 0:n.call(e)}}Object.defineProperty(e,t.key,i)},decorateClass:function(e,t){var i=[],n=[],r={static:[],prototype:[],own:[]};if(e.forEach(function(e){this.addElementPlacement(e,r)},this),e.forEach(function(e){if(!y(e))return i.push(e);var t=this.decorateElement(e,r);i.push(t.element),i.push.apply(i,t.extras),n.push.apply(n,t.finishers)},this),!t)return{elements:i,finishers:n};var o=this.decorateConstructor(i,t);return n.push.apply(n,o.finishers),o.finishers=n,o},addElementPlacement:function(e,t,i){var n=t[e.placement];if(!i&&-1!==n.indexOf(e.key))throw new TypeError(\"Duplicated element (\"+e.key+\")\");n.push(e.key)},decorateElement:function(e,t){for(var i=[],n=[],r=e.decorators,o=r.length-1;o>=0;o--){var s=t[e.placement];s.splice(s.indexOf(e.key),1);var a=this.fromElementDescriptor(e),c=this.toElementFinisherExtras((0,r[o])(a)||a);e=c.element,this.addElementPlacement(e,t),c.finisher&&n.push(c.finisher);var l=c.extras;if(l){for(var d=0;d<l.length;d++)this.addElementPlacement(l[d],t);i.push.apply(i,l)}}return{element:e,finishers:n,extras:i}},decorateConstructor:function(e,t){for(var i=[],n=t.length-1;n>=0;n--){var r=this.fromClassDescriptor(e),o=this.toClassDescriptor((0,t[n])(r)||r);if(void 0!==o.finisher&&i.push(o.finisher),void 0!==o.elements){e=o.elements;for(var s=0;s<e.length-1;s++)for(var a=s+1;a<e.length;a++)if(e[s].key===e[a].key&&e[s].placement===e[a].placement)throw new TypeError(\"Duplicated element (\"+e[s].key+\")\")}}return{elements:e,finishers:i}},fromElementDescriptor:function(e){var t={kind:e.kind,key:e.key,placement:e.placement,descriptor:e.descriptor};return Object.defineProperty(t,Symbol.toStringTag,{value:\"Descriptor\",configurable:!0}),\"field\"===e.kind&&(t.initializer=e.initializer),t},toElementDescriptors:function(e){var t;if(void 0!==e)return(t=e,function(e){if(Array.isArray(e))return e}(t)||function(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}(t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()).map(function(e){var t=this.toElementDescriptor(e);return this.disallowProperty(e,\"finisher\",\"An element descriptor\"),this.disallowProperty(e,\"extras\",\"An element descriptor\"),t},this)},toElementDescriptor:function(e){var t=String(e.kind);if(\"method\"!==t&&\"field\"!==t)throw new TypeError('An element descriptor\\'s .kind property must be either \"method\" or \"field\", but a decorator created an element descriptor with .kind \"'+t+'\"');var i=v(e.key),n=String(e.placement);if(\"static\"!==n&&\"prototype\"!==n&&\"own\"!==n)throw new TypeError('An element descriptor\\'s .placement property must be one of \"static\", \"prototype\" or \"own\", but a decorator created an element descriptor with .placement \"'+n+'\"');var r=e.descriptor;this.disallowProperty(e,\"elements\",\"An element descriptor\");var o={kind:t,key:i,placement:n,descriptor:Object.assign({},r)};return\"field\"!==t?this.disallowProperty(e,\"initializer\",\"A method descriptor\"):(this.disallowProperty(r,\"get\",\"The property descriptor of a field descriptor\"),this.disallowProperty(r,\"set\",\"The property descriptor of a field descriptor\"),this.disallowProperty(r,\"value\",\"The property descriptor of a field descriptor\"),o.initializer=e.initializer),o},toElementFinisherExtras:function(e){var t=this.toElementDescriptor(e),i=g(e,\"finisher\"),n=this.toElementDescriptors(e.extras);return{element:t,finisher:i,extras:n}},fromClassDescriptor:function(e){var t={kind:\"class\",elements:e.map(this.fromElementDescriptor,this)};return Object.defineProperty(t,Symbol.toStringTag,{value:\"Descriptor\",configurable:!0}),t},toClassDescriptor:function(e){var t=String(e.kind);if(\"class\"!==t)throw new TypeError('A class descriptor\\'s .kind property must be \"class\", but a decorator created a class descriptor with .kind \"'+t+'\"');this.disallowProperty(e,\"key\",\"A class descriptor\"),this.disallowProperty(e,\"placement\",\"A class descriptor\"),this.disallowProperty(e,\"descriptor\",\"A class descriptor\"),this.disallowProperty(e,\"initializer\",\"A class descriptor\"),this.disallowProperty(e,\"extras\",\"A class descriptor\");var i=g(e,\"finisher\"),n=this.toElementDescriptors(e.elements);return{elements:n,finisher:i}},runClassFinishers:function(e,t){for(var i=0;i<t.length;i++){var n=(0,t[i])(e);if(void 0!==n){if(\"function\"!=typeof n)throw new TypeError(\"Finishers must return a constructor.\");e=n}}return e},disallowProperty:function(e,t,i){if(void 0!==e[t])throw new TypeError(i+\" can't have a .\"+t+\" property.\")}};return e}();if(n)for(var o=0;o<n.length;o++)r=n[o](r);var s=t(function(e){r.initializeInstanceElements(e,a.elements)},i),a=r.decorateClass(function(e){for(var t=[],i=function(e){return\"method\"===e.kind&&e.key===o.key&&e.placement===o.placement},n=0;n<e.length;n++){var r,o=e[n];if(\"method\"===o.kind&&(r=t.find(i)))if(m(o.descriptor)||m(r.descriptor)){if(y(o)||y(r))throw new ReferenceError(\"Duplicated methods (\"+o.key+\") can't be decorated.\");r.descriptor=o.descriptor}else{if(y(o)){if(y(r))throw new ReferenceError(\"Decorators can't be placed on different accessors with for the same property (\"+o.key+\").\");r.decorators=o.decorators}f(o,r)}else t.push(o)}return t}(s.d.map(u)),e);r.initializeClassElements(s.F,a.elements),r.runClassFinishers(s.F,a.finishers)}([Object(n.d)(\"cloud-google-assistant\")],function(e,t){class i extends t{constructor(...t){super(...t),e(this)}}return{F:i,d:[{kind:\"field\",decorators:[Object(n.g)()],key:\"hass\",value:void 0},{kind:\"field\",decorators:[Object(n.g)()],key:\"cloudStatus\",value:void 0},{kind:\"field\",decorators:[Object(n.g)()],key:\"narrow\",value:void 0},{kind:\"field\",decorators:[Object(n.g)()],key:\"_entities\",value:void 0},{kind:\"field\",decorators:[Object(n.g)()],key:\"_entityConfigs\",value:()=>({})},{kind:\"field\",key:\"_popstateSyncAttached\",value:()=>!1},{kind:\"field\",key:\"_popstateReloadStatusAttached\",value:()=>!1},{kind:\"field\",key:\"_isInitialExposed\",value:void 0},{kind:\"field\",key:\"_getEntityFilterFunc\",value:()=>Object(r.a)(e=>Object(s.a)(e.include_domains,e.include_entities,e.exclude_domains,e.exclude_entities))},{kind:\"method\",key:\"render\",value:function(){if(void 0===this._entities)return n.f`\n        <hass-loading-screen></hass-loading-screen>\n      `;const e=Object(s.b)(this.cloudStatus.google_entities),t=this._getEntityFilterFunc(this.cloudStatus.google_entities),i=this._isInitialExposed||new Set,r=void 0===this._isInitialExposed;let o=0;const a=[],c=[];return this._entities.forEach(s=>{const l=this.hass.states[s.entity_id],d=this._entityConfigs[s.entity_id]||{},h=e?_(d):t(s.entity_id);h&&(o++,r&&i.add(s.entity_id)),(i.has(s.entity_id)?a:c).push(n.f`\n        <ha-card>\n          <div class=\"card-content\">\n            <state-info\n              .hass=${this.hass}\n              .stateObj=${l}\n              secondary-line\n              @click=${this._showMoreInfo}\n            >\n              ${s.traits.map(e=>e.substr(e.lastIndexOf(\".\")+1)).join(\", \")}\n            </state-info>\n            <ha-switch\n              .entityId=${s.entity_id}\n              .disabled=${!e}\n              .checked=${h}\n              @change=${this._exposeChanged}\n            >\n              ${this.hass.localize(\"ui.panel.config.cloud.google.expose\")}\n            </ha-switch>\n            ${s.might_2fa?n.f`\n                  <ha-switch\n                    .entityId=${s.entity_id}\n                    .checked=${Boolean(d.disable_2fa)}\n                    @change=${this._disable2FAChanged}\n                  >\n                    ${this.hass.localize(\"ui.panel.config.cloud.google.disable_2FA\")}\n                  </ha-switch>\n                `:\"\"}\n          </div>\n        </ha-card>\n      `)}),r&&(this._isInitialExposed=i),n.f`\n      <hass-subpage header=\"${this.hass.localize(\"ui.panel.config.cloud.google.title\")}\">\n        <span slot=\"toolbar-icon\">\n          ${o}${this.narrow?\"\":n.f`\n            selected\n          `}\n        </span>\n        ${e?n.f`\n                <paper-icon-button\n                  slot=\"toolbar-icon\"\n                  icon=\"hass:tune\"\n                  @click=${this._openDomainToggler}\n                ></paper-icon-button>\n              `:\"\"}\n        ${e?\"\":n.f`\n                <div class=\"banner\">\n                  ${this.hass.localize(\"ui.panel.config.cloud.google.banner\")}\n                </div>\n              `}\n          ${a.length>0?n.f`\n                  <h1>\n                    ${this.hass.localize(\"ui.panel.config.cloud.google.exposed_entities\")}\n                  </h1>\n                  <div class=\"content\">${a}</div>\n                `:\"\"}\n          ${c.length>0?n.f`\n                  <h1>\n                    ${this.hass.localize(\"ui.panel.config.cloud.google.not_exposed_entities\")}\n                  </h1>\n                  <div class=\"content\">${c}</div>\n                `:\"\"}\n        </div>\n      </hass-subpage>\n    `}},{kind:\"method\",key:\"firstUpdated\",value:function(e){b(k(i.prototype),\"firstUpdated\",this).call(this,e),this._fetchData()}},{kind:\"method\",key:\"updated\",value:function(e){b(k(i.prototype),\"updated\",this).call(this,e),e.has(\"cloudStatus\")&&(this._entityConfigs=this.cloudStatus.prefs.google_entity_configs)}},{kind:\"method\",key:\"_fetchData\",value:async function(){const e=await(e=>e.callWS({type:\"cloud/google_assistant/entities\"}))(this.hass);e.sort((e,t)=>{const i=this.hass.states[e.entity_id],n=this.hass.states[t.entity_id];return Object(a.b)(i?Object(h.a)(i):e.entity_id,n?Object(h.a)(n):t.entity_id)}),this._entities=e}},{kind:\"method\",key:\"_showMoreInfo\",value:function(e){const t=e.currentTarget.stateObj.entity_id;Object(c.a)(this,\"hass-more-info\",{entityId:t})}},{kind:\"method\",key:\"_exposeChanged\",value:async function(e){const t=e.currentTarget.entityId,i=e.target.checked;await this._updateExposed(t,i)}},{kind:\"method\",key:\"_updateExposed\",value:async function(e,t){t!==_(this._entityConfigs[e]||{})&&(await this._updateConfig(e,{should_expose:t}),this._ensureEntitySync())}},{kind:\"method\",key:\"_disable2FAChanged\",value:async function(e){const t=e.currentTarget.entityId,i=e.target.checked;i!==Boolean((this._entityConfigs[t]||{}).disable_2fa)&&await this._updateConfig(t,{disable_2fa:i})}},{kind:\"method\",key:\"_updateConfig\",value:async function(e,t){const i=await Object(o.j)(this.hass,e,t);this._entityConfigs=Object.assign({},this._entityConfigs,{[e]:i}),this._ensureStatusReload()}},{kind:\"method\",key:\"_openDomainToggler\",value:function(){Object(d.a)(this,{domains:this._entities.map(e=>Object(p.a)(e.entity_id)).filter((e,t,i)=>i.indexOf(e)===t),toggleDomain:(e,t)=>{this._entities.forEach(i=>{Object(p.a)(i.entity_id)===e&&this._updateExposed(i.entity_id,t)})}})}},{kind:\"method\",key:\"_ensureStatusReload\",value:function(){if(this._popstateReloadStatusAttached)return;this._popstateReloadStatusAttached=!0;const e=this.parentElement;window.addEventListener(\"popstate\",()=>Object(c.a)(e,\"ha-refresh-cloud-status\"),{once:!0})}},{kind:\"method\",key:\"_ensureEntitySync\",value:function(){if(this._popstateSyncAttached)return;this._popstateSyncAttached=!0;const e=this.parentElement;window.addEventListener(\"popstate\",()=>{Object(l.a)(e,{message:this.hass.localize(\"ui.panel.config.cloud.googe.sync_to_google\")}),Object(o.a)(this.hass)},{once:!0})}},{kind:\"get\",static:!0,key:\"styles\",value:function(){return n.c`\n      .banner {\n        color: var(--primary-text-color);\n        background-color: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        padding: 16px 8px;\n        text-align: center;\n      }\n      h1 {\n        color: var(--primary-text-color);\n        font-size: 24px;\n        letter-spacing: -0.012em;\n        margin-bottom: 0;\n        padding: 0 8px;\n      }\n      .content {\n        display: flex;\n        flex-wrap: wrap;\n        padding: 4px;\n      }\n      ha-card {\n        margin: 4px;\n        width: 100%;\n        max-width: 300px;\n      }\n      .card-content {\n        padding-bottom: 12px;\n      }\n      state-info {\n        cursor: pointer;\n      }\n      ha-switch {\n        padding: 8px 0;\n      }\n\n      @media all and (max-width: 450px) {\n        ha-card {\n          max-width: 100%;\n        }\n      }\n    `}}]}},n.a)}}]);","extractedComments":[]}